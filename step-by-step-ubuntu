Update and restart, I guess

Create ssh key (for example with ssh-keygen -t ed25519)
Install git
sudo apt update
sudo apt install git

TODO: Create section to remove snap?

Add NaturalScrolling True and Tapping on to
/usr/share/X11/xorg.conf.d/40-libinput.conf

# F this
sudo snap remove firefox
sudo add-apt-repository ppa:mozillateam/ppa
echo 'Package: *
Pin: release o=LP-PPA-mozillateam
Pin-Priority: 1001' | sudo tee /etc/apt/preferences.d/mozilla-firefox
sudo apt update
sudo apt install -y firefox

###

git clone git@github.com:lucassperez/dotfiles.git

# TODO: Figure out how to handle locales in Ubuntu, because /etc/locale is missing (wtf?)

# For gods sake!!
gsettings set org.gnome.desktop.wm.preferences audible-bell false
# Also might change /etc/inputrc, find the line with "set bell-style none" and uncomment it,
# or create it if it does not yet exist.

# Gedit, please
gsettings set org.gnome.gedit.preferences.editor insert-spaces true
gsettings set org.gnome.gedit.preferences.editor tabs-size 2
gsettings set org.gnome.gedit.preferences.editor display-right-margin true

sudo apt update
sudo apt install -y zsh tmux xclip vlc gimp peek figlet acpi flameshot unclutter-xfixes zoxide pavucontrol

mkdir -p ~/.cache/zsh/
git clone git@github.com:zdharma-continuum/fast-syntax-highlighting.git /home/lucas/.config/zsh/plugins/fast-syntax-highlighting/

# Of course ripgrep is not in the repos for debian and friends (uwuntu)
curl -LO https://github.com/BurntSushi/ripgrep/releases/download/13.0.0/ripgrep_13.0.0_amd64.deb
sudo dpkg -i ripgrep_13.0.0_amd64.deb
mv ripgrep_13.0.0_amd64.deb ~/Downloads/

# Already have network manager applet (nm-applet)
sudo apt install -y awesome xcompmgr fonts-font-awesome light lxappearance suckless-tools numlockx xwallpaper

sudo apt install -y rofi
sudo apt install -y python3-pip xdotool
pip install rofi-moji

mkdir -p ~/.config
mkdir -p ~/.config/awesome
git clone git@github.com:frioux/charitable.git ~/.config/awesome/charitable

git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.10.2
# To use asdf in this script we have to source it first.
# This line will be in some shell config file, but for now it has to be manually done.
. "$HOME/.asdf/asdf.sh"

asdf plugin-add neovim
asdf install neovim 0.8.2
asdf global neovim 0.8.2

asdf plugin-add rust
asdf install rust 1.66.0
asdf global rust 1.66.0

asdf plugin-add lua
asdf install lua 5.4.3
asdf global lua 5.4.3

asdf plugin-add golang
asdf install golang 1.18
asdf global golang 1.18


mkdir -p ~/.local/bin
sudo apt install -y libreadline-devel
luarocks install luaprompt
ln -s ~/.asdf/installs/lua/5.4.3/luarocks/bin/luap ~/.local/bin/luap

mkdir -p ~/sources
git clone https://github.com/alacritty/alacritty.git ~/sources/alacritty
cd ~/sources/alacritty
rustup override set stable
rustup update stable
sudo apt-get install -y cmake pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3
cargo build --release
sudo infocmp alacritty || sudo tic -xe alacritty,alacritty-direct extra/alacritty.info
ln -s ~/sources/alacritty/target/release/alacritty ~/.local/bin/alacritty
sudo cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg
sudo desktop-file-install extra/linux/Alacritty.desktop
sudo update-desktop-database
sudo mkdir -p /usr/local/share/man/man1
gzip -c extra/alacritty.man | sudo tee /usr/local/share/man/man1/alacritty.1.gz > /dev/null
gzip -c extra/alacritty-msg.man | sudo tee /usr/local/share/man/man1/alacritty-msg.1.gz > /dev/null

cd ~
wget -P ~/Downloads/ -- https://zoom.us/client/5.13.3.651/zoom_amd64.deb
sudo apt -y install ~/Downloads/zoom_amd64.deb

sudo apt-get install -y ca-certificates  curl  gnupg  lsb-release
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
newgrp docke
newgrp docke
sudo systemctl enable docker.service
sudo systemctl start docker.service
getent group | grep docker >/dev/null 2>&1 || sudo groupadd docker
sudo usermod -aG docker "$USER"
# Has to restart to use it or run newgrp docker, but this creates another shell,
# so I really don't think it should be used in a script. Maybe at the end of
# everything, but still.
# Also, docker-compose I believe was moved to a docker command with the already
# installed docker-compose-plugin, so `docker compose` should just work, but we
# can still download this binary, I guess.
# Also, the version might change, better check the github release page:
# https://github.com/docker/compose/releases?page=1
# Older versions didn't have the "v", just the version names, so be careful!
# Apparently, version 1 releases didn't have v, and 2 ownward do.
sudo curl -L "https://github.com/docker/compose/releases/download/v2.14.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose


git clone git@github.com:lucassperez/dmenu-simple-build.git ~/sources/dmenu
cd ~/sources/dmenu
make
sudo make install
cd ~

wget -P ~/.local/bin/ https://raw.githubusercontent.com/GeorgeFilipkin/pulsemixer/master/pulsemixer && chmod +x ~/.local/bin/pulsemixer

go install github.com/charmbracelet/glow@latest

# Install flatpak and add flathub and then
# install kolourpaint from there
sudo apt install -y flatpak
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak install -y flathub org.kde.kolourpaint

# clipnotify requires libx11-dev and libxfixes-dev, while clipmenu requires xsel
git clone git@github.com:cdown/clipnotify.git ~/sources/clipnotify
sudo apt install -y libx11-dev libxfixes-dev xsel
make
sudo make install
git clone git@github.com:cdown/clipmenu.git ~/sources/clipmenu
cd ~/sources/clipmenu
sudo make install
cd ~

git clone git@github.com:troglobit/xplugd.git ~/sources/xplugd
cd ~/sources/xplugd
sudo apt install -y autoconf libxrandr-dev libxi-dev
./autogen.sh
./configure
make
sudo make install

# Yaru colors?
# git@github.com:Jannomag/Yaru-Colors.git

git clone https://github.com/faf0/sct ~/sources/sct
cd ~/sources/sct
make
sudo make install

cd ~

sudo apt install -y tig vim

sudo apt install -y neofetch
ln -s ~/dotfiles/pinguim-ascii-art1 ~/.config/neofetch/ascii-art
rm ~/.config/neofetch/config.conf
ln -s ~/dotfiles/EXAMPLE-FILES/neofetch ~/.config/neofetch/config.conf


###

Change shell to zsh at the end with
chsh -s `which zsh` (/usr/bin/zsh, very likely)

If going to install ruby, will need libssl-dev

Ubuntu's 22.04 tmux version does not have #{user}, so I will probably be desired
to add a ~/.local/.tmux.conf.local with this:
set -g status-right '#{?client_prefix,#[bold]!, }[#(echo $USER)@#{host}] '
