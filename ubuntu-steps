# vi:ft=sh

Update and restart, I guess

Create ssh key (for example with ssh-keygen -t ed25519)
Install git
sudo apt update
sudo apt install git

# TODO: Create section to remove snap?

Add NaturalScrolling True and Tapping on to
/usr/share/X11/xorg.conf.d/40-libinput.conf

# F this
sudo snap remove firefox
sudo add-apt-repository ppa:mozillateam/ppa
echo 'Package: *
Pin: release o=LP-PPA-mozillateam
Pin-Priority: 1001' | sudo tee /etc/apt/preferences.d/mozilla-firefox
sudo apt update
sudo apt install -y firefox

# Firefox snap reinstalled it by its own. I deleted ~/snap/firefox and also
# changed the firefox.desktop exec to where the deb is installed. The desktop
# file is located in /usr/share/applications/firefox.desktop. Basically set the
# Exec to /usr/bin/firefox, which was the path shown to me by `which firefox`.

### I guess we start here or at F-ing snap firefox

git clone git@github.com:lucassperez/dotfiles.git

# Locales are located at /etc/default/locale in Ubuntu, but we can also
# manipulate it with update-locale or localectl
sudo localectl set-locale LANG=en_GB.UTF-8 LC_MESSAGES=en_GB.UTF-8 LC_MEASUREMENT=pt_BR.UTF-8 LC_TIME=pt_BR.UTF-8

# For gods sake!!
gsettings set org.gnome.desktop.wm.preferences audible-bell false
# Also might change /etc/inputrc, find the line with "set bell-style none" and uncomment it,
# or create it if it does not yet exist.

# Gedit, please
gsettings set org.gnome.gedit.preferences.editor insert-spaces true
gsettings set org.gnome.gedit.preferences.editor tabs-size 2
gsettings set org.gnome.gedit.preferences.editor display-right-margin true

sudo apt update
sudo apt install -y zsh tmux jq xclip vlc gimp peek figlet acpi flameshot \
  unclutter-xfixes pavucontrol ripgrep zoxide tree

mkdir -p ~/.cache/zsh/
mkdir -p ~/.config/zsh/plugins
cd ~/.config/zsh/plugins
git clone git@github.com:zdharma-continuum/fast-syntax-highlighting.git
cd ~

sudo apt install -y awesome xcompmgr fonts-font-awesome light lxappearance suckless-tools numlockx xwallpaper

# Otherwise, light won't work
sudo usermod -a -G video $USER

sudo apt install -y rofi
sudo apt install -y python3-pip xdotool
pip install rofi-moji

mkdir -p ~/.config
mkdir -p ~/.config/awesome
git clone git@github.com:frioux/charitable.git ~/.config/awesome/charitable

# ASDF stuff
git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.11.1

# If want to use rtx instead of asdf
# curl https://rtx.pub/rtx-latest-linux-x64 > ~/rtx_bin_downloaded_for_now
# chmod +x ~/rtx_bin_downloaded_for_now
# sudo mv ~/rtx_bin_downloaded_for_now /usr/local/bin/rtx

# Since we have not sourced our configs yet, asdf is not in path.
# So, before using it, we have to manually execute this shell script.
. $HOME/.asdf/asdf.sh

# Lua dependencies
sudo apt-get install linux-headers-$(uname -r) build-essential

asdf plugin-add neovim
asdf plugin-add lua
asdf plugin-add golang
asdf plugin-add rust

asdf install neovim 0.8.3
asdf install lua 5.4.3
asdf install golang 1.18
asdf install rust 1.66.0

asdf global neovim 0.8.3
asdf global lua 5.4.3
asdf global golang 1.18
asdf global rust 1.66.0

# Same goes for rtx
# eval "$(rtx activate zsh)"

# rtx install neovim 0.8.3
# rtx install lua 5.4.3
# rtx install golang 1.18
# rtx install rust 1.66.0

# rtx global neovim 0.8.3
# rtx global lua 5.4.3
# rtx global golang 1.18
# rtx global rust 1.66.0

sudo apt install -y libreadline-dev
luarocks install luaprompt
# Comment just to remind that with rtx, don't need to symlink
mkdir -p ~/.local/bin
ln -s ~/.asdf/installs/lua/5.4.3/luarocks/bin/luap ~/.local/bin/luap

go install github.com/charmbracelet/glow@latest

mkdir -p ~/sources
git clone https://github.com/alacritty/alacritty.git ~/sources/alacritty
cd ~/sources/alacritty
rustup override set stable
rustup update stable
sudo apt-get install -y cmake pkg-config libfreetype6-dev libfontconfig1-dev libxcb-xfixes0-dev libxkbcommon-dev python3
cargo build --release
sudo infocmp alacritty || sudo tic -xe alacritty,alacritty-direct extra/alacritty.info
sudo cp target/release/alacritty /usr/local/bin # or anywhere else in $PATH
sudo cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg
sudo desktop-file-install extra/linux/Alacritty.desktop
sudo update-desktop-database
# With a desktop entry, no symlink is necessary
# ln -s ~/sources/alacritty/target/release/alacritty ~/.local/bin/alacritty
sudo cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg
sudo desktop-file-install extra/linux/Alacritty.desktop
sudo update-desktop-database
sudo mkdir -p /usr/local/share/man/man1
gzip -c extra/alacritty.man | sudo tee /usr/local/share/man/man1/alacritty.1.gz > /dev/null
gzip -c extra/alacritty-msg.man | sudo tee /usr/local/share/man/man1/alacritty-msg.1.gz > /dev/null
cd ~

cd ~
wget -P ~/Downloads/ -- https://zoom.us/client/5.13.3.651/zoom_amd64.deb
sudo apt -y install ~/Downloads/zoom_amd64.deb

sudo apt-get install -y ca-certificates  curl  gnupg  lsb-release
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
newgrp docker
sudo systemctl enable docker.service
sudo systemctl start docker.service
getent group | grep '^docker:' >/dev/null 2>&1 || sudo groupadd docker
sudo usermod -aG docker "$USER"
# Has to restart to use it or run newgrp docker, but this creates another shell,
# so I really don't think it should be used in a script. Maybe at the end of
# everything, but still.
# Also, docker-compose I believe was moved to a docker command with the already
# installed docker-compose-plugin, so `docker compose` should just work, but we
# can still download this binary, I guess.
# Also, the version might change, better check the github release page:
# https://github.com/docker/compose/releases?page=1
# Older versions didn't have the "v", just the version names, so be careful!
# Apparently, version 1 releases didn't have v, and 2 ownward do.
sudo curl -L "https://github.com/docker/compose/releases/download/v2.14.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

# TODO find out dmenu dependencies and make this work
sudo apt install libx11-dev libxinerama-dev libxft-dev
git clone git@github.com:lucassperez/dmenu-simple-build.git ~/sources/dmenu
cd ~/sources/dmenu
make
sudo make install
cd ~

wget -P ~/.local/bin/ https://raw.githubusercontent.com/GeorgeFilipkin/pulsemixer/master/pulsemixer && chmod +x ~/.local/bin/pulsemixer

# Install flatpak and add flathub and then
# install kolourpaint from there
sudo apt install -y flatpak
flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
flatpak install -y flathub org.kde.kolourpaint

# clipnotify requires libx11-dev and libxfixes-dev, while clipmenu requires xsel
git clone git@github.com:cdown/clipnotify.git ~/sources/clipnotify
sudo apt install -y libx11-dev libxfixes-dev xsel
cd ~/sources/clipnotify
make
sudo make install
git clone git@github.com:cdown/clipmenu.git ~/sources/clipmenu
cd ~/sources/clipmenu
sudo make install
cd ~

git clone git@github.com:troglobit/xplugd.git ~/sources/xplugd
cd ~/sources/xplugd
sudo apt install -y autoconf libxrandr-dev libxi-dev
./autogen.sh
./configure
make
sudo make install

# Yaru colors?
# git@github.com:Jannomag/Yaru-Colors.git

git clone https://github.com/faf0/sct ~/sources/sct
cd ~/sources/sct
make
sudo make install
cd ~

sudo apt install -y tig vim

sudo apt install -y neofetch
mkdir -p ~/.config/neofetch
ln -s ~/dotfiles/pinguim-ascii-art1 ~/.config/neofetch/ascii-art
rm ~/.config/neofetch/config.conf
ln -s ~/dotfiles/EXAMPLE-FILES/neofetch ~/.config/neofetch/config.conf

sudo apt install wtype xdotool
pip install --user rofimoji

###

Change shell to zsh at the end with (/usr/bin/zsh, very likely)
chsh -s `which zsh`

If going to install ruby, will need libssl-dev

Ubuntu's 22.04 tmux version does not have #{user}, so I will probably be desired
to add a ~/.local/.tmux.conf.local with this:
set -g status-right '#{?client_prefix,#[bold]!, }[#(echo $USER)@#{host}] '

I tried to set the cursor on so many ways, only using lxappearance was not consistent,
so I tried setting it in
- /usr/share/icons/default/index.theme
- ~/.config/gtk-3.0/settings.ini
and also with
gsettings set org.gnome.desktop.interface cursor-theme 'DMZ-Black'
Which didn't really work. But after all this, I used lxappearance to set it also
to DMZ-Black and then it finally worked, apparently.
I also ran flatpak --user override --filesystem=/usr/share/icons/:ro, so hopefully
flatpaks will be able to see this directory with the icons. And lastly,
I added a ~/.xprofile with "xrdb ~/.Xresources" and a ~/.Xresources with "Xcursor.theme: DMZ-Black".
Keep in mind that /etc/gdm3/Xsession sources ~/.xprofile.
