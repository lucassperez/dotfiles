# vi:ft=sh
# == TODO ==
# kazam
# Super tux kart? (:

# ======

# Emoji fonts: https://gist.github.com/cole-h/8aab0ed9d65efe38496e8e27b96b6a3d
# No caso eu botei o arquivo direto em /etc/fonts/conf.d/

# Before scripting
Change hostname
Create ssh key pair and add to github
Enable tap to click https://askubuntu.com/questions/1156192/how-to-enable-tap-to-click-in-libinput-on-ubuntu-19-04-x11-unity
Maybe comment out the addition of /home/USER/bin in /etc/zprofile? Or maybe start using it, could be nice, too.

QUANDO EU USO O chsh PRA POR O ZSH, NÃO IMPORTA O QUE EU FAÇA,
NEM O ~/.profile NEM O ~/.zprofile ERAM LIDOS
DAÍ EU CRIEI O ARQUIVO /etc/profile.local. ISSO FUNCIONA NO
OPENSUSE TUMBLEWEED, MAS NÃO NO FEDORA. DAÍ EU ALTEREI O
ARQUIVO /etc/profile DIRETAMENTE MESMO

# === COMMANDS START HERE ===

# DNF configs
echo "fastestmirror=True" >> /etc/dnf/dnf.conf
echo "max_parallel_downloads=10" >> /etc/dnf/dnf.conf
echo "defaultyes=True" >> /etc/dnf/dnf.conf

# Update. Usually takes forever
dnf update -y

# RPM fusion
# https://docs.fedoraproject.org/en-US/quick-docs/setup_rpmfusion/
dnf install -y https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
dnf install -y https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm

# Movies, music etc
# https://docs.fedoraproject.org/en-US/quick-docs/assembly_installing-plugins-for-playing-movies-and-music/
dnf install -y gstreamer1-plugins-{bad-\*,good-\*,base} gstreamer1-plugin-openh264 gstreamer1-libav --exclude=gstreamer1-plugins-bad-free-devel
dnf install -y lame\* --exclude=lame-devel
dnf group upgrade --with-optional Multimedia

# Change languages
echo "LANG=en_GB.UTF-8
LC_CTYPE="pt_BR.utf8"
LC_NUMERIC="pt_BR.utf8"
LC_TIME="pt_BR.utf8"
LC_COLLATE="pt_BR.utf8"
LC_MONETARY="pt_BR.utf8"
LC_MESSAGES="en_GB.UTF-8"
LC_PAPER="pt_BR.utf8"
LC_NAME="pt_BR.utf8"
LC_ADDRESS="pt_BR.utf8"
LC_TELEPHONE="pt_BR.utf8"
LC_MEASUREMENT="pt_BR.utf8"
LC_IDENTIFICATION="pt_BR.utf8"
LC_ALL=" >> /etc/locale.conf

# Gnome-mines and gedit, ultra important, right?
sudo dnf install -y gnome-mines gedit

# Gedit goofiness
gsettings set org.gnome.gedit.preferences.editor insert-spaces true
gsettings set org.gnome.gedit.preferences.editor tabs-size 2
gsettings set org.gnome.gedit.preferences.editor display-right-margin true

# More gnome settings because f*** bells
gsettings set org.gnome.desktop.wm.preferences audible-bell false

# Fuck, and I can't say it enough, bells
# Change /etc/inputrc and uncomment the line with 'set bell-style none' or create this line,
# or use ~/.inputrc or the file specified in INPUTRC environment variable to set it.

# Software to install
# Git e tmux já vêm instalados? Wtf. Jq também? Whaat. Acho que o curl também. :thinking:
dnf install -y zsh util-linux-user xset xclip vlc gimp peek figlet acpi flameshot \
  unclutter zoxide xinput pavucontrol alsa-plugins-pulseaudio ripgrep

# Discord
mkdir -p ~/sources/discord-tar-balls
wget -P ~/sources/discord-tar-balls -- 'https://discord.com/api/download?platform=linux&format=tar.gz'
tar -x -f '~/sources/discord-tar-balls/download?platform=linux&format=tar.gz' -C ~/sources/discord-tar-balls
ln -s ~/sources/discord-tar-balls/Discord/Discord ~/.local/bin/discord
mv ~/sources/discord-tar-balls/download\?platform=linux\&format=tar.gz discord-`discord -v | grep 'Discord [0-9]' | cut -d ' ' -f 2`.tar.gz

# AwesomeWM and xwallpaper
# xbacklight has been a pain on the new pc, dunno why ): gonna use light I guess
dnf install awesome network-manager-applet xcompmgr autoconf automake pixman-devel \
  xcb-util-image-devel xcb-util-devel libjpeg-turbo-devel libXpm-devel fontawesome-fonts \
  lxappearance light xrandr slock numlockx

light -N 1
git clone git@github.com:frioux/charitable.git /home/lucas/.config/awesome/charitable
mkdir -p ~/sources
git clone git@github.com:stoeckmann/xwallpaper.git ~/sources/xwallpaper
cd ~/sources/xwallpaper
./autogen.sh
./configure
make
sudo make install
cd ~

# Change shell to ZSH
chsh -s /usr/bin/zsh
mkdir -p ~/.cache/zsh/
# touch ~/.cache/zsh/history
git clone git@github.com:zdharma-continuum/fast-syntax-highlighting.git /home/lucas/.config/zsh/plugins/fast-syntax-highlighting/

# ASDF stuff
git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.10.2

asdf plugin-add neovim
asdf install neovim 0.6.0
asdf global neovim 0.6.0

asdf plugin-add rust
asdf install rust 1.59.0
asdf global rust 1.59.0

asdf plugin-add lua
asdf install lua 5.4.3
asdf global lua 5.4.3
sudo dnf in -y readline-devel
luarocks install luaprompt
mkdir -p ~/.local/bin/
ln -s ~/.asdf/installs/lua/5.4.3/luarocks/bin/luap ~/.local/bin

asdf plugin-add golang
asdf install golang 1.18
asdf global golang 1.18
# Later on I'll want these anyways, might as well install it now
# go install golang.org/x/tools/gopls@latest
# go install github.com/traefik/yaegi/cmd/yaegi@latest
# go install github.com/x-motemen/gore/cmd/gore@latest
# go install github.com/mdempsky/gocode@latest

# Build alacritty
## mkdir -p ~/sources
## git clone https://github.com/alacritty/alacritty.git ~/sources/alacritty
## dnf install -y cmake freetype-devel fontconfig-devel libxcb-devel libxkbcommon-devel g++
## cd ~/sources/alacritty
## cargo build --release
## mkdir -p ~/.local/bin
## ln -s ~/sources/alacritty/target/release/alacritty ~/.local/bin
## sudo cp extra/logo/alacritty-term.svg /usr/share/pixmaps/Alacritty.svg
## sudo desktop-file-install extra/linux/Alacritty.desktop
## sudo update-desktop-database
## sudo mkdir -p /usr/local/share/man/man1
## gzip -c extra/alacritty.man | sudo tee /usr/local/share/man/man1/alacritty.1.gz > /dev/null
## gzip -c extra/alacritty-msg.man | sudo tee /usr/local/share/man/man1/alacritty-msg.1.gz > /dev/null
## # cp extra/completions/_alacritty ${ZDOTDIR:-~}/.zsh_functions/_alacritty
## cd ~

# Or just install alacritty normally with dnf, it is pretty updated
sudo dnf in -y alacritty

# Install zoom, I guess
mkdir -p ~/Downloads
wget -P ~/Downloads -- https://zoom.us/client/latest/zoom_x86_64.rpm
sudo dnf in -y ~/Downloads/zoom_x86_64.rpm

# Get docker right
# https://docs.docker.com/engine/install/fedora/
sudo dnf install -y dnf-plugins-core
sudo dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
sudo dnf install -y docker-ce docker-ce-cli containerd.io
sudo systemctl enable docker.service
sudo systemctl start docker.service
getent group | grep docker >/dev/null 2>&1 || sudo groupadd docker
sudo usermod -aG docker "$USER"
sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

# My very simple dmenu
git clone git@github.com:lucassperez/dmenu-simple-build.git ~/sources/dmenu
cd ~/sources/dmenu
sudo dnf in libXinerama-devel libXft-devel
make
sudo make install
cd ~

# pulsemixer
wget -P ~/.local/bin/ https://raw.githubusercontent.com/GeorgeFilipkin/pulsemixer/master/pulsemixer && chmod +x .local/bin/pulsemixer

# Build glow with golang
git clone https://github.com/charmbracelet/glow ~/sources/glow
cd ~/sources/glow
go build
mkdir -p ~/.local/bin
ln -s ~/sources/glow/glow ~/.local/bin/
cd ~

# kolourpaint is a KDE thing and installs shitloads of dependencies,
# so I left it separated here
sudo dnf install -y kolourpaint

# Nvim?
# As coisas podem dar umas bugadas na hora de
# instalar o treesitter, vai precisar instalar:
sudo dnf in -y gcc-c++ libstdc++ libstdc++-devel

# Clipmenu
# First, clipnotify + dependencies and then clipmenu
mkdir -p ~/sources
git clone git@github.com:cdown/clipnotify.git ~/sources/clipnotify
sudo dnf in libXfixes-devel xsel
cd ~/sources/clipnotify
make
sudo make install
git clone git@github.com:cdown/clipmenu.git ~/sources/clipmenu
cd ~/sources/clipmenu
sudo make install
cd ~

# Xplugd
mkdir -p ~/sources
git clone git@github.com:troglobit/xplugd.git ~/sources/xplugd
sudo dnf in libX11-devel libX1-devel libXrandr-devel
cd ~/sources/xplugd
./autogen.sh
./configure
make
sudo make install

# Yaru colors? git@github.com:Jannomag/Yaru-Colors.git
