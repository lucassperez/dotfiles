#!/usr/bin/sh

# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message. The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit. The hook is allowed to edit the commit message file.

first_line=`head -n 1 -- $1`
# This strips everything from the right to left
# until if finds a #. So if a line starts with # or
# whitespaces and then #, it will be considered empty.
if [ -z `echo ${first_line%%#*}` ]; then
  # Se a mensagem de commit estiver vazia,
  # simplesmente retorna e deixa o git
  # fazer o que normalmente faria.
  exit 0
fi

# A mensagem deve começar com uma tag, tipo assim: [uma tag]
# A mensagem pode ser apenas uma tag e mais nada ou uma tag e um título.
# Caso haja título, deve haver espaço entre o fim da tag e o começo do título.
if echo $first_line | grep -vq "^\[.\+\]\($\| .\+\)"; then
  # https://stackoverflow.com/questions/3417896/how-do-i-prompt-the-user-from-within-a-commit-msg-hook
  # https://victoria.dev/blog/an-automatic-interactive-pre-commit-checklist-in-the-style-of-infomercials/
  # Read user input, assign stdin to keyboard
  exec < /dev/tty

  printf 'A mensagem de commit está sem uma tag no começo ou mal formatada (sem espaço após a tag). Ex: [tag] Mensagem\n'
  printf 'Seguir assim mesmo? [Y/n] '
  read resposta
  [ -z $resposta ] || [ $resposta = 'y' -o $resposta = 'Y' -o $resposta = 's' -o $resposta = 'S' ];
  # Outro jeito usando case.
  # case $resposta in
  #   ''|[yYsS]) ;;
  #   *) exit 1 ;;
  # esac
fi
