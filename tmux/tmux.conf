# Tentar usar isso aqui?
# https://www.youtube.com/watch?v=l_TTxc0AcCw

# Run tmux list-keys to get a list of all bindings.
# Also, the command customize-mode can show a bunch of things.

# prefix + C-l clears screen. Useful because I remapped C-l to move around panes
bind -N 'Enviar teclas C-l sem que sejam capturadas pelo próprio tmux' C-l send-keys 'C-l'
# Por que não fazer pro resto?
bind -N 'Enviar teclas C-h sem que sejam capturadas pelo próprio tmux' C-h send-keys 'C-h'
bind -N 'Enviar teclas C-j sem que sejam capturadas pelo próprio tmux' C-j send-keys 'C-j'
bind -N 'Enviar teclas C-k sem que sejam capturadas pelo próprio tmux' C-k send-keys 'C-k'

# Pro esc não ficar lerdo dentro do nvim dentro do tmux
# https://github.com/neovim/neovim/issues/2035
# https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set -sg escape-time 10

# Prefixo + q durar mais tempo. Dá pra apertar esc pra cancelar logo
set -g display-panes-time 4000

# Dividir os painéis
unbind '"'
unbind %
bind -N 'Abrir um painel vertical' s split-window -v -c "#{pane_current_path}"
bind -N 'Abrir um painel horizontal' v split-window -h -c "#{pane_current_path}"

# Histórico grandão
set -g history-limit 10000

# Atualizar o título do terminal dentro do Tmux
set -g set-titles on
set -g set-titles-string "#{window_name}" ##{pane_current_path} não atualiza enquanto eu mudo de diretório... ):<

# Começar uma janela nova no mesmo diretório
bind -N 'Abre uma janela nova mantendo o mesmo diretório atual' c new-window -c "#{pane_current_path}"

# Começar uma janela nova nos dotfiles
# This is the original keybinding of prefix + capital C: "customize-mode -Z", whatever that is
# bind-key    -T prefix       C                    customize-mode -Z
bind -N 'Abre uma janela nova no diretório ~/dotfiles' C new-window -c "~/dotfiles"

# Atalho para carregar as configurações (recarregar, reload, refresh)
bind -N 'Reaplica as configs em ~/.config/tmux/tmux.conf' r source-file ~/.config/tmux/tmux.conf

############
# Ignores tmux map when running vim, nvim or fzf. This means that inside these
# programs, the following mappings will be ignored, and the default nvim/vim/fzf
# C-j will be executed, for instance. Used as "smart pane switching" when on vim
# (aware of vim splits) or to navigate up and down in fzf.
# In the case of fzf, the navigation can be done with C-p and C-n, so I think
# this map might actually be a bad thing, but since I never use fzf, I'll never
# really know.
bind -N 'Envia as teclas C-h, ignorando mapeamentos do tmux, quando o programa for vim, nvim ou fzf' -n C-h run '(tmux display-message -p #{pane_current_command} | grep -iq "^\(nvim\|fzf\)$" && tmux send-keys C-h) || tmux select-pane -L'
bind -N 'Envia as teclas C-j, ignorando mapeamentos do tmux, quando o programa for vim, nvim ou fzf' -n C-j run '(tmux display-message -p #{pane_current_command} | grep -iq "^\(nvim\|fzf\)$" && tmux send-keys C-j) || tmux select-pane -D'
bind -N 'Envia as teclas C-k, ignorando mapeamentos do tmux, quando o programa for vim, nvim ou fzf' -n C-k run '(tmux display-message -p #{pane_current_command} | grep -iq "^\(nvim\|fzf\)$" && tmux send-keys C-k) || tmux select-pane -U'
bind -N 'Envia as teclas C-l, ignorando mapeamentos do tmux, quando o programa for vim, nvim ou fzf' -n C-l run '(tmux display-message -p #{pane_current_command} | grep -iq "^\(nvim\|fzf\)$" && tmux send-keys C-l) || tmux select-pane -R'
# I want to specifically match nvim but NOT vim. This is because I run barebones
# vim without plugins nor keymaps, so I want to be able to navigate out of a
# tmux pane with vim running. If I wanted to match on both vim and nvim, the
# regex could be like this: ^n\?vim$
############

# Cancel selection with C-c without quitting vim mode, but still
# be able to quit vim mode with C-c when nothing is selected
# https://stackoverflow.com/questions/47848463/tmux-variable-indicating-whether-text-is-selected
bind -N 'Sair da seleção sem sair do modo de cópia estilo vim' \
       -T copy-mode-vi C-c \
       if-shell -F '#{selection_present}' \
       'send-keys -X clear-selection' \
       'send-keys -X cancel'

bind -N 'Redimensionar painéis (esquerda)' -n S-Left resize-pane -L
bind -N 'Redimensionar painéis (direita)' -n S-Right resize-pane -R
bind -N 'Redimensionar painéis (cima)' -n S-Up resize-pane -U
bind -N 'Redimensionar painéis (baixo)' -n S-Down resize-pane -D

# Não renomear as sessões automaticamente
set -g allow-rename off

### Seção de eu tentando deixar o tmux mais bonito ###
# Cores de verdade
# set -g default-terminal "xterm-256color"
set -g default-terminal "tmux-256color"

# Status bar lá embaixo
# Muda de cor quando aperta o prefixo
set -g status-style 'bg=#{?client_prefix,#808080,#606060} fg=#{?client_prefix,#e0e0e0,#d6d6d6}'
set -g window-status-current-style 'bg=terminal fg=terminal'
set -g message-style 'bg=#fcba03 fg=#000000'

# set -g status-left " [#S] "
# [kirby] qui, 11/fev/21 - 16:34
# set -g status-right "[#h] #(date '+%a, %d/%b/%y - %H:%M') "

# New, consice status bar. When prefix is pressed,
# current session + user@host gets bold + an exclamation
# mark in the right bar appears (also in bold).
set -g status-left '#{?client_prefix,#[bold],} [#S] '
set -g status-left-length 15
set -g status-right '#{?client_prefix,#[bold]!, }[#{user}@#{host}] '

# Usar o mouse pra quê?
set -g mouse on

# Copiar do tmux pro clip board do sistema usando xclip?
# bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# Vi mode no modo de copiar
# Algumas ideias vindas daqui, mas só algumas
# https://www.rockyourcode.com/copy-and-paste-in-tmux/
setw -g mode-keys vi
# v começa a selecionar
bind-key -N 'Começa a selecionar' -T copy-mode-vi v send-keys -X begin-selection
# Control + v seleciona em blocos
bind-key -N 'Começa a selecionar em bloco' -T copy-mode-vi C-v send-keys -X rectangle-toggle
# Pra copiar ainda é Enter e pra colar, prefixo + ]

# https://superuser.com/questions/310251/use-terminal-scrollbar-with-tmux?lq=1
# set -ga terminal-overrides ',xterm*:smcup@:rmcup@'

# checkhealth do nvim mandou por isso aqui:
set-option focus-events on
set -ga terminal-overrides ',xterm-256color:Tc'
# Com esse outro "terminal-overrides", control + esquerda/direita passou a gerar
# as sequências 5D e 5C, ao invés das antigas ;5D e ;5C, e por isso tive que
# fazer binds novos no zshrc

# I have never, once, used this
# bind-key -r b run-shell "tmux neww bash -c \"~/scripts/tmux-chtsh/tmux-cht.sh\""

# If both XDG_CONFIG_HOME and HOME/.config exists,
# it only sources the XDG_CONFIG_HOME one.
if-shell '[ -d $XDG_CONFIG_HOME ] || [ -d $HOME/.config ]' {
  if-shell '[ -f $XDG_CONFIG_HOME/tmux/tmux.conf.local ]' {
    source $XDG_CONFIG_HOME/tmux/tmux.conf.local
  } {
    if-shell '[ -f $HOME/.config/tmux/tmux.conf.local ]' {
      source $HOME/.config/tmux/tmux.conf.local
    }
  }
}
