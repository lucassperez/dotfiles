set-option -g default-shell /bin/zsh

# prefix + C-l clears screen. Useful because I remapped C-l to move around panes
bind C-l send-keys 'C-l'
# Por que não fazer pro resto?
bind C-h send-keys 'C-h'
bind C-j send-keys 'C-j'
bind C-k send-keys 'C-k'

# Pro esc não ficar lerdo dentro do nvim dentro do tmux
# https://github.com/neovim/neovim/issues/2035
set -sg escape-time 10

# Prefixo + q durar mais tempo. Dá pra apertar esc pra cancelar logo
set -g display-panes-time 4000

# Dividir os painéis
unbind '"'
unbind %
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# Histórico grandão
set -g history-limit 10000

# Atualizar o título do terminal dentro do Tmux
set -g set-titles on
set -g set-titles-string "#{window_name}" ##{pane_current_path} não atualiza enquanto eu mudo de diretório... ):<

# Começar uma janela nova no mesmo diretório
bind c new-window -c "#{pane_current_path}"

# Atalho para carregar as configurações
bind r source-file ~/.tmux.conf

############
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
############

# Comandos mais fáceis para mudar os tamanhos dos painéis
unbind -n C-Left
unbind -n C-Right
unbind -n C-Up
unbind -n C-Down

bind -n S-Left resize-pane -L
bind -n S-Right resize-pane -R
bind -n S-Up resize-pane -U
bind -n S-Down resize-pane -D

bind -r C-Left resize-pane -L 5
bind -r C-Right resize-pane -R 5
bind -r C-Up resize-pane -U 5
bind -r C-Down resize-pane -D 5

# Não renomear as sessões automaticamente
set -g allow-rename off

### Seção de eu tentando deixar o tmux mais bonito ###
# Cores de verdade
# set -g default-terminal "xterm-256color"
set -g default-terminal "tmux-256color"

# Status bar lá embaixo
set -g status-style 'bg=#606060 fg=#d6d6d6'
set -g window-status-current-style 'bg=terminal fg=terminal'
set -g message-style 'bg=#fcba03 fg=#000000'

set -g status-left " [#S] "
# [kirby] qui, 11/fev/21 - 16:34
set -g status-right "[#h] #(date '+%a, %d/%b/%y - %H:%M') "

# Usar o mouse pra quê?
set -g mouse on

# Copiar do tmux pro clip board do sistema usando xclip?
# bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

# Vi mode no modo de copiar
# Algumas ideias vindas daqui, mas só algumas
# https://www.rockyourcode.com/copy-and-paste-in-tmux/
setw -g mode-keys vi
# v começa a selecionar
bind-key -T copy-mode-vi v send-keys -X begin-selection
# Control + v seleciona em blocos
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
# Pra copiar ainda é Enter e pra colar, prefixo + ]

# https://superuser.com/questions/310251/use-terminal-scrollbar-with-tmux?lq=1
# set -ga terminal-overrides ',xterm*:smcup@:rmcup@'

# checkhealth do nvim mandou por isso aqui:
set-option focus-events on
set -ga terminal-overrides ',xterm-256color:Tc'
# Com esse outro "terminal-overrides", control + esquerda/direita passou a gerar
# as sequências 5D e 5C, ao invés das antigas ;5D e ;5C, e por isso tive que
# fazer binds novos no zshrc


bind-key -r b run-shell "tmux neww bash -c \"~/scripts/tmux-chtsh/tmux-cht.sh\""

# AwesomeWM Vim Tmux navigator section
# # Set title suffix to "- TMUX"
# set-option -g set-titles on
# set-option -g set-titles-string '#S: #W - TMUX'
# # Smart pane switching with awareness of vim splits and system windows
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
# 	| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind -n C-Left if-shell "$is_vim" "send-keys C-h" "run-shell 'sh ~/.config/awesome/awesomewm-vim-tmux-navigator/tmux_focus.sh left'"
# bind -n C-Down if-shell "$is_vim" "send-keys C-j" "run-shell 'sh ~/.config/awesome/awesomewm-vim-tmux-navigator/tmux_focus.sh down'"
# bind -n C-Up if-shell "$is_vim" "send-keys C-k" "run-shell 'sh ~/.config/awesome/awesomewm-vim-tmux-navigator/tmux_focus.sh up'"
# bind -n C-Right if-shell "$is_vim" "send-keys C-l" "run-shell 'sh ~/.config/awesome/awesomewm-vim-tmux-navigator/tmux_focus.sh right'"
# bind-key -T copy-mode-vi 'C-Left' "run-shell 'sh ~/.config/awesome/awesomewm-vim-tmux-navigator/tmux_focus.sh left'"
# bind-key -T copy-mode-vi 'C-Down' "run-shell 'sh ~/.config/awesome/awesomewm-vim-tmux-navigator/tmux_focus.sh down'"
# bind-key -T copy-mode-vi 'C-Up' "run-shell 'sh ~/.config/awesome/awesomewm-vim-tmux-navigator/tmux_focus.sh up'"
# bind-key -T copy-mode-vi 'C-Right' "run-shell 'sh ~/.config/awesome/awesomewm-vim-tmux-navigator/tmux_focus.sh right'"

if-shell "[ -f $HOME/.local/.tmux.conf.local ]" 'source $HOME/.local/.tmux.conf.local'
