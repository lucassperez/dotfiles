# vim: ft=sh
# test -z "$PROFILEREAD" && . /etc/profile || true

# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# LOG="$HOME/profile-invocations"
# echo "=== $(date) ===" >>$LOG
# echo "Shell: $SHELL">>$LOG
# echo "Caller: $0" >>$LOG
# echo "DESKTOP_SESSION: $DESKTOP_SESSION" >>$LOG
# echo "GDMSESSION: $GDMSESSION" >>$LOG
# https://faq.i3wm.org/question/2498/ssh-sessions-in-i3.1.html

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"

export SUDO_EDITOR=vim
export EDITOR=nvim
export PAGER=less
export LESS='-FXR'
export LESSHISTFILE="$XDG_CACHE_HOME/lesshst"
export INPUTRC="$XDG_CONFIG_HOME/inputrc"
export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"

# Run clipmenu --help to see all options
# https://github.com/cdown/clipmenu
export CM_HISTLENGTH=10

# Cor do jq
# A única mudança foi mudar o null para vermelho, pois antes era
# cinza e praticamente impossível em um fundo escuro do terminal
# Cores para null:false:true:numbers:strings:arrays:objects
export JQ_COLORS='1;31:1;95:1;95:1;33:1;32:1;96:1;39'

# https://unix.stackexchange.com/questions/94498/what-causes-this-green-background-in-ls-output
# Muito ruim os fundos verdes (eram 42, mudei pra 102), principalmente com a letra azul
export LS_COLORS='rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=1;30;102:ow=1;31;102:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'

export ERL_AFLAGS='-kernel shell_history enabled -kernel shell_history_file_bytes 1024000'

prepend_to_PATH() {
  # If no path is given, returns
  if [ -z $1 ]; then
    return 1
  fi

  # Can only prepend directories
  if ! [ -d $1 ]; then
    return 2
  fi

  # Check if the given path, $1, is present in the PATH variable.
  # Ensuring it is either at the beggining/end of string and/or
  # preceded/followed by : ensures we won't get false positives
  # in case the $1 variable is a subdirectory of a directory
  # that already is present in the PATH variable.
  if `echo $PATH | grep -q "\(^\|:\)$1\($\|:\)"`; then
    return 3
  fi

  PATH="$1:$PATH"
}

prepend_to_PATH $HOME/.local/bin
prepend_to_PATH $HOME/.asdf/installs/golang/1.18/packages/bin

if [ "$0" = "/etc/gdm3/Xsession" -a "$DESKTOP_SESSION" = "i3" ]; then
    export $(gnome-keyring-daemon -s)
fi

if [ "$DESKTOP_SESSION" = "awesome" ]; then
    export $(gnome-keyring-daemon -s)
    /bin/env sh -c "sleep 2 && /bin/env awesome-client 'require(\"widgets.simple.update_brightness_microphone_and_volume_icons\").call()'" &
fi

# if running bash
# if [ -n "$BASH_VERSION" ]; then
#     # include .bashrc if it exists
#     if [ -f "$HOME/.bashrc" ]; then
#       . "$HOME/.bashrc"
#     fi
# fi

if [ -n $ZSH_VERSION ]; then
  if [ -f "$HOME/.zshenv" ]; then
    . "$HOME/.zshenv"
  fi
fi
